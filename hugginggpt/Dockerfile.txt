# Use an official Python runtime as a parent image
FROM python:3.8-slim

# Set the working directory in the container
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential git wget && \
    rm -rf /var/lib/apt/lists/*

# Install miniconda
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    bash Miniconda3-latest-Linux-x86_64.sh -b -p /miniconda && \
    rm Miniconda3-latest-Linux-x86_64.sh

ENV PATH="/miniconda/bin:$PATH"

# Create a new conda environment
RUN conda create -n jarvis python=3.8 -y

# Make RUN commands use the new environment
SHELL ["/bin/bash", "-c"]
RUN echo "source activate jarvis" > ~/.bashrc
ENV PATH="/miniconda/envs/jarvis/bin:$PATH"

# Install PyTorch, torchvision, torchaudio, and CUDA
RUN conda install pytorch torchvision torchaudio pytorch-cuda=11.7 -c pytorch -c nvidia -y

# Copy the requirements.txt file into the container
COPY ./server/requirements.txt .

# Install any needed packages specified in requirements.txt
RUN pip install --no-cache-dir -r requirements.txt && \
    rm requirements.txt

# Install nodejs and npm
RUN apt-get update && apt-get install -y --no-install-recommends \
    nodejs npm && \
    rm -rf /var/lib/apt/lists/*

# Copy source files
COPY . .

# Install web server dependencies
RUN cd web && npm install

# Expose the model server ports
EXPOSE 8004
EXPOSE 8005
# Expose the web server port
EXPOSE 9999

WORKDIR /app/server

# Start the model and web server
CMD ["python3", "models_server.py", "--config", "configs/config.lite.yaml"]